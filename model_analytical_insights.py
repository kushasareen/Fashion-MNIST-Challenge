# -*- coding: utf-8 -*-
"""Model_Analytical Insights.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15qlnuZgVBIE-dxRsMHGHsq7y7e41Oosq
"""

# Commented out IPython magic to ensure Python compatibility.
from __future__ import absolute_import, division, print_function, unicode_literals

# Install TensorFlow
try:
  # %tensorflow_version only exists in Colab.
#   %tensorflow_version 2.x
except Exception:
  pass

import tensorflow as tf
!pip install -U tensorflow_datasets
!pip install -q kaggle

import pandas as pd

!mkdir -p !/.kaggle
!cp kaggle.json ~/.kaggle/ 
!chmod 600 /root/.kaggle/kaggle.json

!kaggle competitions download -c mais202-fall2019

!unzip /content/train_images.npy.zip
!unzip /content/test_images.npy.zip

import tensorflow as tf
import tensorflow_datasets as tfds

import os
import math
import numpy as np
import matplotlib.pyplot as plt

import tqdm
import tqdm.auto
tqdm.tqdm = tqdm.auto.tqdm

print(tf.__version__)
print(tf.test.is_gpu_available())

train_labels=pd.read_csv("./train_labels.csv")

train_data= (np.load("train_images.npy"))/255.0
test_data= (np.load("test_images.npy"))/255.0

train_data.shape

train_labels=train_labels.iloc[:,1]

train_data.reshape(*train_data.shape,-1)
test_data.reshape(*test_data.shape,-1)

train_data = train_data[..., np.newaxis]
test_data=test_data[..., np.newaxis]

train_data.shape

from tensorflow.keras.layers import Conv2D, MaxPooling2D
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Flatten, Dense, Dropout
#from tensorflow.nn import relu, softmax

model_cnn = Sequential()
model_cnn.add(Conv2D(32, (3, 3), padding='same', activation='relu',
              input_shape=(28, 28, 1)))

model_cnn.add(MaxPooling2D((2, 2), strides=2))

model_cnn.add(Conv2D(64, (3, 3), padding='same', activation='relu'))
model_cnn.add(MaxPooling2D((2, 2), strides=2))

#model_cnn.add(Conv2D(64, (3, 3), padding='same', activation='relu'))
#model_cnn.add(MaxPooling2D((2, 2), strides=2))

#model_cnn.add(Conv2D(128, (3, 3), padding='same', activation='relu'))
#model_cnn.add(MaxPooling2D((2, 2), strides=2))

model_cnn.add(Flatten())
model_cnn.add(Dense(256, activation='relu'))
model_cnn.add(Dropout(0.2))
model_cnn.add(Dense(128, activation='relu'))
model_cnn.add(Dropout(0.2))
#model_cnn.add(Dense(64, activation='relu'))
#model_cnn.add(Dropout(0.2))
model_cnn.add(Dense(10, activation='softmax'))

model_cnn.compile(optimizer='adam',
                 loss='sparse_categorical_crossentropy',
                 metrics=['accuracy'])

model_cnn.summary

BATCH_SIZE=50
model_cnn.fit(np.array(train_data),np.array(train_labels),epochs=5,steps_per_epoch=math.ceil(train_data.shape[0] / BATCH_SIZE))

#x_test= np.load('test_images.npy').squeeze()
#x_test=x_test.reshape(len(x_test),-1)

y_test=model_cnn.predict(test_data)
y_test=np.argmax(y_test,axis=1)

df_test= pd.read_csv('sample_submission.csv')
df_test['label']=y_test
df_test.to_csv('submission.csv',index=False)

from google.colab import files

files.download('submission.csv')

kaggle competitions submit -c mais202-fall2019 -f submission.csv -m "A+"